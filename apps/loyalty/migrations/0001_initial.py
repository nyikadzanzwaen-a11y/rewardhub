# Generated by Django 5.2.4 on 2025-08-31 07:59

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
        ('locations', '0001_initial'),
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LoyaltyProgram',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loyalty_programs', to='tenants.tenant')),
            ],
            options={
                'db_table': 'loyalty_program',
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('rule_type', models.CharField(choices=[('earn', 'Point Earning'), ('redeem', 'Point Redemption'), ('bonus', 'Bonus Points'), ('location', 'Location-based')], default='earn', max_length=20)),
                ('conditions', models.JSONField(blank=True, default=dict)),
                ('actions', models.JSONField(blank=True, default=dict)),
                ('points', models.IntegerField(default=0)),
                ('location_based', models.BooleanField(default=False)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='loyalty.loyaltyprogram')),
            ],
            options={
                'db_table': 'loyalty_rule',
                'ordering': ['-priority', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('points_threshold', models.IntegerField(default=0)),
                ('benefits', models.JSONField(blank=True, default=dict)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='tier_icons/')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tiers', to='loyalty.loyaltyprogram')),
            ],
            options={
                'db_table': 'loyalty_tier',
                'ordering': ['points_threshold'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('points', models.IntegerField()),
                ('transaction_type', models.CharField(choices=[('earn', 'Points Earned'), ('redeem', 'Points Redeemed'), ('expire', 'Points Expired'), ('adjust', 'Manual Adjustment'), ('bonus', 'Bonus Points')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('reference', models.CharField(blank=True, max_length=255)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='completed', max_length=20)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='locations.location')),
                ('loyalty_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='customers.loyaltyaccount')),
                ('rule_applied', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='loyalty.rule')),
            ],
            options={
                'db_table': 'loyalty_transaction',
                'ordering': ['-timestamp'],
            },
        ),
    ]
